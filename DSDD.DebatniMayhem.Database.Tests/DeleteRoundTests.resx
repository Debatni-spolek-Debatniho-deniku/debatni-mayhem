<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dbo_DeleteRoundTest_TestAction.SqlScript" xml:space="preserve">
    <value>-- database unit test for dbo.DeleteRound

DECLARE @Round1_Id INT = 1;

SELECT * FROM Matches WHERE RoundId = @Round1_Id

EXEC DeleteRound @Round1_Id;

SELECT * FROM Matches WHERE RoundId = @Round1_Id

</value>
  </data>
  <data name="dbo_DeleteRoundTest_PretestAction.SqlScript" xml:space="preserve">
    <value>SET IDENTITY_INSERT Players ON;

DECLARE @Player1 INT = 1
DECLARE @Player2 INT = 2
DECLARE @Player3 INT = 3
DECLARE @Player4 INT = 4
DECLARE @Player5 INT = 5
DECLARE @Player6 INT = 6
DECLARE @Player7 INT = 7
DECLARE @Player8 INT = 8
DECLARE @Player11 INT = 11
DECLARE @Player12 INT = 12
DECLARE @Player13 INT = 13
DECLARE @Player14 INT = 14
DECLARE @Player15 INT = 15
DECLARE @Player16 INT = 16
DECLARE @Player17 INT = 17
DECLARE @Player18 INT = 18

INSERT INTO Players (Id, Name) 
VALUES 
(@Player1, '1'), 
(@Player2, '2'), 
(@Player3, '3'), 
(@Player4, '4'), 
(@Player5, '5'), 
(@Player6, '6'), 
(@Player7, '7'), 
(@Player8, '8'), 
(@Player11, '11'), 
(@Player12, '12'), 
(@Player13, '13'), 
(@Player14, '14'), 
(@Player15, '15'), 
(@Player16, '16'), 
(@Player17, '17'), 
(@Player18, '18') 

SET IDENTITY_INSERT Players OFF;

DECLARE @Round1_Id INT = 1;
DECLARE @Round2_Id INT = 2;

SET IDENTITY_INSERT Rounds ON;

INSERT INTO Rounds (Id, Topic) VALUES (@Round1_Id, 'Round1'), (@Round2_Id, 'Round2')

SET IDENTITY_INSERT Rounds OFF;

DECLARE @Room1_Id INT = 1;
DECLARE @Room2_Id INT = 2;

SET IDENTITY_INSERT Rooms ON;

INSERT INTO Rooms (Id, Name) VALUES 
(@Room1_Id, '1'), (@Room2_Id, '2')

SET IDENTITY_INSERT Rooms OFF;

SET IDENTITY_INSERT Matches ON;

INSERT INTO Matches (Id, RoundId, RoomId, OG_1, OG_2, OO_1, OO_2, CG_1, CG_2, CO_1, CO_2)
VALUES
(1, @Round1_Id, @Room1_Id, @Player1, @Player2, @Player3, @Player4, @Player5, @Player6, @Player7, @Player8),
(2, @Round1_Id, @Room2_Id, @Player11, @Player12, @Player13, @Player14, @Player15, @Player16, @Player17, @Player18),
(3, @Round2_Id, @Room1_Id, @Player1, @Player2, @Player3, @Player4, @Player5, @Player6, @Player7, @Player8),
(4, @Round2_Id, @Room2_Id, @Player11, @Player12, @Player13, @Player14, @Player15, @Player16, @Player17, @Player18)

SET IDENTITY_INSERT Matches OFF;</value>
  </data>
  <data name="dbo_DeleteRoundTest_PosttestAction.SqlScript" xml:space="preserve">
    <value>DELETE FROM Matches
DELETE FROM Rounds
DELETE FROM Players
DELETE FROM Rooms</value>
  </data>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>